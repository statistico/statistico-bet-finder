openapi: 3.0.0
info:
  title: Statistico Price Finder API
  version: 1.0.0
servers:
  - url: https://price-finder.statistico.io/api/v1
paths:
  /event/{id}/book/bookmaker:
    post:
      tags:
        - Book
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the event
          schema:
            type: integer
            example: 234571
      description: Get bookmaker prices for provided event and market filters
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                markets:
                  type: array
                  items:
                    type: string
                    enum:
                      - "OVER_UNDER_25"
                      - "OVER_UNDER_35"
      responses:
        200:
          description: Bookmaker prices for provided event and market filters
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'success'
                  data:
                    type: object
                    properties:
                      book:
                        $ref: '#/components/schemas/Book'
        default:
          description: Default non 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /event/{id}/book/statistico:
    post:
      tags:
        - Book
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the event
          schema:
            type: integer
            example: 234571
      description: Get statistico prices for provided event and market filters
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                markets:
                  type: array
                  items:
                    type: string
                    enum:
                      - "OVER_UNDER_25"
                      - "OVER_UNDER_35"
      responses:
        200:
          description: Statistico prices for provided event and market filters
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'success'
                  data:
                    type: object
                    properties:
                      book:
                        $ref: '#/components/schemas/StatisticoBook'

components:
  schemas:
    Book:
      type: object
      properties:
        eventId:
          type: integer
          example: 234571
        createdAt:
          $ref: '#/components/schemas/DateTime'
        markets:
          type: array
          items:
            $ref: '#/components/schemas/Market'
    Market:
      type: object
      properties:
        name:
          type: string
          enum:
            - OVER_UNDER_25
            - OVER_UNDER_35
        bookmakers:
          type: array
          items:
            $ref: '#/components/schemas/BookmakerMarket'
    BookmakerMarket:
      type: object
      properties:
        bookmaker:
          type: string
          enum:
            - betfair
        marketId:
          type: string
          example: "123456101"
          description: The bookmaker specific market ID
        runners:
          type: array
          items:
            $ref: '#/components/schemas/BookmakerRunner'
    BookmakerRunner:
      type: object
      properties:
        name:
          type: string
          example: 'Over 2.5 Goals'
          description: The descriptive name of the runner
        selectionId:
          type: string
          example: "1.247691"
          description: The bookmaker specific selection ID
        back:
          type: array
          items:
            $ref: '#/components/schemas/BookmakerPrice'
        lay:
          type: array
          items:
            $ref: '#/components/schemas/BookmakerPrice'
    BookmakerPrice:
      type: object
      properties:
        value:
          type: integer
          example: 1.89
        size:
          type: integer
          example: 560.90
    StatisticoBook:
      type: object
      properties:
        eventId:
          type: integer
          example: 235981
        createdAt:
          $ref: '#/components/schemas/DateTime'
        markets:
          type: array
          items:
            $ref: '#/components/schemas/StatisticoMarket'
    StatisticoMarket:
      type: object
      properties:
        name:
          type: string
          enum:
            - OVER_UNDER_25
            - OVER_UNDER_35
        runners:
          type: array
          items:
            $ref: '#/components/schemas/StatisticoRunner'
    StatisticoRunner:
      type: object
      properties:
        name:
          type: string
          example: 'Over 2.5 Goals'
          description: The descriptive name of the runner
        price:
          type: integer
          example: 1.96
    DateTime:
      type: string
      description: "An RFC-3339 valid datetime"
      example: '2018-01-24T20:21:44+00:00'
    StandardResponse:
      type: object
      required:
        - status
        - data
      properties:
        status:
          type: string
          example: fail
          enum:
            - error
            - fail
        data:
          type: object
          properties:
            errors:
              type: array
              items:
                $ref: '#/components/schemas/Error'
    Error:
      type: object
      required:
        - message
        - code
      properties:
        message:
          type: string
          example: Something went wrong
          description: A human-readable description of the error
        code:
          type: integer
          example: 1
          description: >
            A code to identify the error. "1" is used when no specific error
            code has been defined for this error