// Code generated by protoc-gen-go. DO NOT EDIT.
// source: internal/app/grpc/proto/requests.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FixtureRequest struct {
	FixtureId            uint64   `protobuf:"varint,1,opt,name=fixture_id,json=fixtureId,proto3" json:"fixture_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FixtureRequest) Reset()         { *m = FixtureRequest{} }
func (m *FixtureRequest) String() string { return proto.CompactTextString(m) }
func (*FixtureRequest) ProtoMessage()    {}
func (*FixtureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc5c65bc0b7e763, []int{0}
}

func (m *FixtureRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FixtureRequest.Unmarshal(m, b)
}
func (m *FixtureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FixtureRequest.Marshal(b, m, deterministic)
}
func (m *FixtureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FixtureRequest.Merge(m, src)
}
func (m *FixtureRequest) XXX_Size() int {
	return xxx_messageInfo_FixtureRequest.Size(m)
}
func (m *FixtureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FixtureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FixtureRequest proto.InternalMessageInfo

func (m *FixtureRequest) GetFixtureId() uint64 {
	if m != nil {
		return m.FixtureId
	}
	return 0
}

type HistoricalResultRequest struct {
	// The Home Team ID that the Result set relates to
	HomeTeamId uint64 `protobuf:"varint,1,opt,name=home_team_id,json=homeTeamId,proto3" json:"home_team_id,omitempty"`
	// The Away Team ID that the Result set relates to
	AwayTeamId uint64 `protobuf:"varint,2,opt,name=away_team_id,json=awayTeamId,proto3" json:"away_team_id,omitempty"`
	// The number of results to return
	Limit uint32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// A filter to return Results before a specific date
	// RFC3339 formatted string i.e "2006-01-02T15:04:05Z07:00"
	DateBefore           string   `protobuf:"bytes,4,opt,name=date_before,json=dateBefore,proto3" json:"date_before,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoricalResultRequest) Reset()         { *m = HistoricalResultRequest{} }
func (m *HistoricalResultRequest) String() string { return proto.CompactTextString(m) }
func (*HistoricalResultRequest) ProtoMessage()    {}
func (*HistoricalResultRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc5c65bc0b7e763, []int{1}
}

func (m *HistoricalResultRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoricalResultRequest.Unmarshal(m, b)
}
func (m *HistoricalResultRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoricalResultRequest.Marshal(b, m, deterministic)
}
func (m *HistoricalResultRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoricalResultRequest.Merge(m, src)
}
func (m *HistoricalResultRequest) XXX_Size() int {
	return xxx_messageInfo_HistoricalResultRequest.Size(m)
}
func (m *HistoricalResultRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoricalResultRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HistoricalResultRequest proto.InternalMessageInfo

func (m *HistoricalResultRequest) GetHomeTeamId() uint64 {
	if m != nil {
		return m.HomeTeamId
	}
	return 0
}

func (m *HistoricalResultRequest) GetAwayTeamId() uint64 {
	if m != nil {
		return m.AwayTeamId
	}
	return 0
}

func (m *HistoricalResultRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *HistoricalResultRequest) GetDateBefore() string {
	if m != nil {
		return m.DateBefore
	}
	return ""
}

type SeasonFixtureRequest struct {
	SeasonId uint64 `protobuf:"varint,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	// RFC3339 formatted string i.e. "2006-01-02T15:04:05Z07:00"
	DateFrom string `protobuf:"bytes,2,opt,name=date_from,json=dateFrom,proto3" json:"date_from,omitempty"`
	// RFC3339 formatted string i.e "2006-01-02T15:04:05Z07:00"
	DateTo               string   `protobuf:"bytes,3,opt,name=date_to,json=dateTo,proto3" json:"date_to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SeasonFixtureRequest) Reset()         { *m = SeasonFixtureRequest{} }
func (m *SeasonFixtureRequest) String() string { return proto.CompactTextString(m) }
func (*SeasonFixtureRequest) ProtoMessage()    {}
func (*SeasonFixtureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc5c65bc0b7e763, []int{2}
}

func (m *SeasonFixtureRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SeasonFixtureRequest.Unmarshal(m, b)
}
func (m *SeasonFixtureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SeasonFixtureRequest.Marshal(b, m, deterministic)
}
func (m *SeasonFixtureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SeasonFixtureRequest.Merge(m, src)
}
func (m *SeasonFixtureRequest) XXX_Size() int {
	return xxx_messageInfo_SeasonFixtureRequest.Size(m)
}
func (m *SeasonFixtureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SeasonFixtureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SeasonFixtureRequest proto.InternalMessageInfo

func (m *SeasonFixtureRequest) GetSeasonId() uint64 {
	if m != nil {
		return m.SeasonId
	}
	return 0
}

func (m *SeasonFixtureRequest) GetDateFrom() string {
	if m != nil {
		return m.DateFrom
	}
	return ""
}

func (m *SeasonFixtureRequest) GetDateTo() string {
	if m != nil {
		return m.DateTo
	}
	return ""
}

type SeasonRequest struct {
	// The Season ID that the Result set relates to
	SeasonId int64 `protobuf:"varint,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	// A filter to return Results before a specific date
	// RFC3339 formatted string i.e "2006-01-02T15:04:05Z07:00"
	DateBefore           string   `protobuf:"bytes,2,opt,name=date_before,json=dateBefore,proto3" json:"date_before,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SeasonRequest) Reset()         { *m = SeasonRequest{} }
func (m *SeasonRequest) String() string { return proto.CompactTextString(m) }
func (*SeasonRequest) ProtoMessage()    {}
func (*SeasonRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc5c65bc0b7e763, []int{3}
}

func (m *SeasonRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SeasonRequest.Unmarshal(m, b)
}
func (m *SeasonRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SeasonRequest.Marshal(b, m, deterministic)
}
func (m *SeasonRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SeasonRequest.Merge(m, src)
}
func (m *SeasonRequest) XXX_Size() int {
	return xxx_messageInfo_SeasonRequest.Size(m)
}
func (m *SeasonRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SeasonRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SeasonRequest proto.InternalMessageInfo

func (m *SeasonRequest) GetSeasonId() int64 {
	if m != nil {
		return m.SeasonId
	}
	return 0
}

func (m *SeasonRequest) GetDateBefore() string {
	if m != nil {
		return m.DateBefore
	}
	return ""
}

type TeamRequest struct {
	// The Team ID that the Result set relates to
	TeamId int64 `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	// The number of results to return. If limit is not set the whole Result set for the Team
	// will be returned
	Limit *wrappers.Int32Value `protobuf:"bytes,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// A filter to return Results before a specific date
	// RFC3339 formatted string i.e "2006-01-02T15:04:05Z07:00"
	DateBefore           string   `protobuf:"bytes,3,opt,name=date_before,json=dateBefore,proto3" json:"date_before,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeamRequest) Reset()         { *m = TeamRequest{} }
func (m *TeamRequest) String() string { return proto.CompactTextString(m) }
func (*TeamRequest) ProtoMessage()    {}
func (*TeamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc5c65bc0b7e763, []int{4}
}

func (m *TeamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeamRequest.Unmarshal(m, b)
}
func (m *TeamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeamRequest.Marshal(b, m, deterministic)
}
func (m *TeamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamRequest.Merge(m, src)
}
func (m *TeamRequest) XXX_Size() int {
	return xxx_messageInfo_TeamRequest.Size(m)
}
func (m *TeamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TeamRequest proto.InternalMessageInfo

func (m *TeamRequest) GetTeamId() int64 {
	if m != nil {
		return m.TeamId
	}
	return 0
}

func (m *TeamRequest) GetLimit() *wrappers.Int32Value {
	if m != nil {
		return m.Limit
	}
	return nil
}

func (m *TeamRequest) GetDateBefore() string {
	if m != nil {
		return m.DateBefore
	}
	return ""
}

func init() {
	proto.RegisterType((*FixtureRequest)(nil), "proto.FixtureRequest")
	proto.RegisterType((*HistoricalResultRequest)(nil), "proto.HistoricalResultRequest")
	proto.RegisterType((*SeasonFixtureRequest)(nil), "proto.SeasonFixtureRequest")
	proto.RegisterType((*SeasonRequest)(nil), "proto.SeasonRequest")
	proto.RegisterType((*TeamRequest)(nil), "proto.TeamRequest")
}

func init() {
	proto.RegisterFile("internal/app/grpc/proto/requests.proto", fileDescriptor_2bc5c65bc0b7e763)
}

var fileDescriptor_2bc5c65bc0b7e763 = []byte{
	// 340 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xdf, 0x4e, 0xc2, 0x30,
	0x14, 0xc6, 0x33, 0xc6, 0xbf, 0x1d, 0xc4, 0x8b, 0x85, 0x04, 0x22, 0x51, 0x97, 0x5d, 0x18, 0xae,
	0xb6, 0x08, 0x6f, 0xe0, 0x05, 0x71, 0x17, 0xde, 0x54, 0xe2, 0x2d, 0x29, 0xec, 0x0c, 0x9b, 0x6c,
	0xeb, 0x6c, 0xbb, 0xa0, 0x3e, 0x87, 0x0f, 0x6c, 0xda, 0x32, 0x21, 0x18, 0xae, 0x9a, 0xf3, 0xeb,
	0x77, 0xce, 0xf9, 0xfa, 0x15, 0x1e, 0x58, 0xa9, 0x50, 0x94, 0x34, 0x8f, 0x69, 0x55, 0xc5, 0x3b,
	0x51, 0x6d, 0xe3, 0x4a, 0x70, 0xc5, 0x63, 0x81, 0x1f, 0x35, 0x4a, 0x25, 0x23, 0x53, 0xfa, 0x1d,
	0x73, 0xdc, 0xdc, 0xed, 0x38, 0xdf, 0xe5, 0x68, 0x35, 0x9b, 0x3a, 0x8b, 0xf7, 0x82, 0x56, 0x15,
	0x8a, 0x83, 0x2c, 0x8c, 0xe1, 0x7a, 0xc9, 0x3e, 0x55, 0x2d, 0x90, 0xd8, 0x7e, 0xff, 0x16, 0x20,
	0xb3, 0x64, 0xcd, 0xd2, 0x89, 0x13, 0x38, 0xb3, 0x36, 0xf1, 0x0e, 0x24, 0x49, 0xc3, 0x1f, 0x07,
	0xc6, 0xcf, 0x4c, 0x2a, 0x2e, 0xd8, 0x96, 0xe6, 0x04, 0x65, 0x9d, 0xab, 0xa6, 0x35, 0x80, 0xab,
	0x77, 0x5e, 0xe0, 0x5a, 0x21, 0x2d, 0x8e, 0xcd, 0xa0, 0xd9, 0x0a, 0x69, 0x91, 0xa4, 0x5a, 0x41,
	0xf7, 0xf4, 0xeb, 0x4f, 0xd1, 0xb2, 0x0a, 0xcd, 0x0e, 0x8a, 0x11, 0x74, 0x72, 0x56, 0x30, 0x35,
	0x71, 0x03, 0x67, 0x36, 0x24, 0xb6, 0xf0, 0xef, 0x61, 0x90, 0x52, 0x85, 0xeb, 0x0d, 0x66, 0x5c,
	0xe0, 0xa4, 0x1d, 0x38, 0x33, 0x8f, 0x80, 0x46, 0x4f, 0x86, 0x84, 0x0c, 0x46, 0xaf, 0x48, 0x25,
	0x2f, 0xcf, 0x5e, 0x33, 0x05, 0x4f, 0x1a, 0x7e, 0xf4, 0xd3, 0xb7, 0x20, 0x49, 0xf5, 0xa5, 0x99,
	0x9a, 0x09, 0x5e, 0x18, 0x2b, 0x1e, 0xe9, 0x6b, 0xb0, 0x14, 0xbc, 0xf0, 0xc7, 0xd0, 0x33, 0x97,
	0x8a, 0x1b, 0x2b, 0x1e, 0xe9, 0xea, 0x72, 0xc5, 0xc3, 0x17, 0x18, 0xda, 0x55, 0x17, 0x77, 0xb8,
	0x27, 0x3b, 0xce, 0x9c, 0xb7, 0xfe, 0x39, 0xff, 0x86, 0x81, 0x7e, 0x7a, 0x33, 0x6c, 0x0c, 0xbd,
	0xd3, 0xf8, 0x5c, 0xd2, 0x55, 0x36, 0x98, 0xc7, 0x26, 0x18, 0x3d, 0x62, 0x30, 0x9f, 0x46, 0xf6,
	0x67, 0xa3, 0xe6, 0x67, 0xa3, 0xa4, 0x54, 0x8b, 0xf9, 0x1b, 0xcd, 0x6b, 0xbc, 0x90, 0x9a, 0x7b,
	0xbe, 0x7b, 0xd3, 0x35, 0xcd, 0x8b, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe1, 0x9c, 0x8f, 0x06,
	0x55, 0x02, 0x00, 0x00,
}
